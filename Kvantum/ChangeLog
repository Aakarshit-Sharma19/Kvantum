V0.8.23
---------
 * Added two new sections for opaque and translucent dialogs. The fallbacks are the sections "WindowTranslucent" and "Window".
 * Added KF5 system and user color scheme paths to "style.pro" and "KvantumManager.cpp", respectively. The system path is used with the Qt5 compilation.
 * Added a hacking key for removing the icons of pushbuttons as far as possible.
 * Another hacking key for removing menu icons.
 * A lot of subtle changes that together guarantee a more logical look under unusual circumstances.

V0.8.22
---------
 * Added an experimental hacking key to force size grips of dialogs and statusbars.
 * Partially rounded view-items (in some places) and headers.
 * How did I forget namespace in such a program?!
 * Take care of transparent line-edits in comboboxes (I've seen them only in Qt5 Cantata).
 * Added a key for the minimum scrollbar extent and gave a 1px space to scrollbars of very thin widgets.
 * Set lower/upper limits for some integer keys.
 * If "mirror_doc_tabs" is false, don't mirror tabs when "attach_active_tab" is also false.

V0.8.21
---------
 * If the interior element of the "expand-" objects exists, make borders rounded even when the widget height is greater than the value of frame expansion.
 * Now it's possible to have clean borders with maximally rounded corners (without a new key and when the "border-" elements exist).
 * Added a configuration section for distinguishing between opaque and translucent window backgrounds if needed.
 * Added a key for not mirroring the top/left tab shape to draw the bottom/right tab in the document mode.
 * Set the pressed state for a combobox if its line-edit has focus.
 * Compile kvantumpreview and kventummanager against Qt5 by default.
 * Workaround for the nasty behavior of Qt5 QSettings, which reorders keys on writing.
 * A little more space for centered toolbar handles.

V0.8.20
---------
 * Added a key for removing scrollbar arrows as far as possible.
 * Simplified transformations between horizontal and vertical elements.
 * Changed the config page layout of Kvantum Manager.
 * Added a key for assigning a separate color to that part of the progress text, which is inside the progress indicator. (Useful when there isn't enough contrast between the progress text and indicator.)
 * Added a key for setting the maximum thickness of progressbars.
 * Increased text margins of the default theme (because of size changes in v0.8.18).
 * Fit adjacent header sections together.
 * To know about RTL, ask the widget, not the app.
 * Take into account all exceptional situations with Kvantum Manager.
 * No need to normal and disabled menuitem panels.
 * Improved "Theme-Making.pdf", especially its Indicators section.
 * Added SMPlayer's screen to the whitelist of draggable widgets.
 * Increased the thickness of the clickable rectangle of sliders to the slider thickness.

V0.8.19
---------
 * Eliminate any possibility of getting caught in infinite loops when forcing text colors of (tool-)buttons.
 * Draw the toolbutton frame and interior together (at PE_PanelButtonTool).
 * Draw the line-edit frame and interior together (at PE_PanelLineEdit).
 * Better handling of busy progressbars.
 * Better look for KisSliderSpinBox, especially when progressbar corners are maximally rounded.
 * Better handling of Konqueror's extra icon inside its URL combobox.
 * Don't force text color on buttons that are drawn in the standard way.
 * Workarounds for KMultiTabBarTab (a pushbutton drawn as a toolbutton).
 * Don't draw a toolbar containing a tab-bar (as in Kaffeine).
 * Fixes for LibreOffice with dark-and-light themes.
 * Give combobox text colors to its label if there is one.
 * No pale background for disabled menubar-items.
 * Correct length for spinboxes with negative and/or double values and also for date-time-edits.

V0.8.18
---------
 * Now it's possible to have completely rounded corners (and more).
 * Elide the progressbar text when there isn't space (as in Dolphin's space info).
 * Added missing corner widgets for vertical tabs.
 * A better way of calculating spinbox sizes.
 * Added a key for tooltip background color.
 * Use minW and minH as far as possible.
 * Better size calculation for some widgets (to align them horizontally if possible).
 * Force the minimum sizes of Qt5 spinboxes (workaround for a probable Qt5 bug).
 * Get the theme specification only once because the XLib function XGetSelectionOwner() is used instead of QX11Info::isCompositingManagerRunning() for Qt5.
 * Added keys for icons sizes (KDE setting has priority).
 * A key for filling the rubber-band rectangle.
 * Solved the problem of rounding drop-down tool-buttons.
 * Better size calculation for menubar and better placement of its items.
 * Integrate the arrow part of a non-editable combobox with it.
 * Better size calculation for comboboxes.
 * Removed the useless StatusBar section. Also removed the focus state of TabBarFrame.
 * Force text color in line-edits when needed (as in KNotes' font comboboxes).
 * Clean-up.

V0.8.17
---------
 * Added a key for drawing adjacent menu and tool bars as a whole.
 * Fill the whole menubar (and not just its empty area) with its SVG element.
 * Fit adjacent view-items together.
 * Replaced the ugly default box frame with a simple one.
 * A workaround for the problem of Dolphin's view-items with QSvgRenderer.

V0.8.16
---------
 * A new key for drawng spin indicators vertically inside the spin line-edit.
 * The left (or right for RTL) text margin of menuitems also includes their checkboxes and radiobuttons now.
 * Removed the 2-px frame thickness limit from menus and tooltips without compositing.
 * Allow different thicknesses for horizontal and vertical menu frames.
 * Added a hacking variable for drawing KDE capacity bars as progressbars.
 * Fixed Konsole's color scheme editing dialog.
 * Set PM_LargeIconSize and PM_IconViewIconSize to the KDE value for dialog icon size.
 * Prevent drawing pushbuttons as toolbuttons (as in QupZilla and KNotes).
 * Don't draw the interior and frame of sizegrip if its window has a custom background color (as in KNotes).
 * Don't draw the interior of a window with custom background color (as in KNotes).

V0.8.15
---------
 * Added the possibility of having high contrast between the colors of buttons, toolbars and menubars, on the one hand, and generic containers, on the other hand.
 * Fixed the text color of K3b's location bar when there's a high contrast between the window and toolbar text colors.
 * Yet another workaround when there isn't enough space for icon-only toolbuttons with menu.
 * Added optional floating tabs (see Theme-Making.pdf).
 * Workaround for lack of space in spinboxes.
 * Don't give the button text colors to those plasma toolbuttons that pretend to have only icons but have texts.
 * Use Plasma foreground color for Plasma toolbutton text.
 * Set limits on lineedit frame size when needed.
 * Set limits on pushbutton sizes inside a view-item.
 * A better criterion for deciding if a widget belongs to Plasma.
 * Force the (push and tool) button text colors.
 * Don't set the text color of Plasma menu titles to that of their menus when they aren't transparent.
 * Use gray values of colors for checking their contrast.
 * Force view-item text colors when item text is added as a label (as in VLC).
 * Always return to qApp colors when no valid color is defined.
 * Distinguish between the toggled and pressed arrow states if a toggled down arrow element exists.
 * Solved the problem of styled toolbuttons that have no panel and aren't auto-raised.

V0.8.14
---------
 * Distinguish between the focus and normal states of generic frames only if the frame focus elements exist.
 * Consider blurring for Qt5 Konsole.
 * Made Kvantum Manager see commas in the theme comment.

V0.8.13
---------
 * Use transformations inside the SVG image to reduce memory footprint.
 * Set limits on combobox sizes where there isn't enough space.
 * Fixed combobox focus state.
 * In Kvantum Manager, enable the popup blurring checkbox when both translucency and composite checkboxes are unchecked.
 * When blurring, don't go to the next ancestor window.

V0.8.12
---------
 * Added optional tab widget junctions for attachimg active tabs.
 * Draw disabled active tabs correctly.
 * Don't try to attach empty tabs (as in Kdenlive's track widget).
 * Try to attach the active tab to its tab widget even when the QStyle option of the tab widget frame doesn't exist (as in GoldenDict).
 * Force blurring for Yakuake too if it's forced for Konsole.
 * Put the check/radio button on the left side of the menu item. Fixed the menu item size too.

V0.8.11
---------
 * Ignore frame width for toolbuttons with just an arrow as icon.
 * Toolbuttons with popup menus were too wide.
 * Set limits on toolbutton frame sizes where there isn't enough space.
 * Set limits on frame and indicator sizes of toolbutton dropdown indicators where there isn't enough space.
 * Always limit indicator size to its bounding rectangle.
 * Translucency doesn't need internalWinId (only blurring does).

V0.8.10
---------
 * Added a hacking variable for (KDE) menu titles.
 * Fixed the outline and titlebar buttons of MDI subwindows.
 * Slim toolbars by default.
 * Added a separate key for blurring the regions behind (translucent) menus and tooltips.
 * Improved Kvantum Manager's config page.
 * Who needs frame pattern?
 * Allow tiling over the interior background with a separate (translucent) pattern object.
 * Remove toolbutton text margins when there isn't enough space (as in Qupzilla's bookmark toolbar).
 * Elide tab text when needed.

V0.8.9
---------
 * Added a workaround for menu paddings inherited from parent stylesheets (as in the context menu of VLC's palylist search lineedit).
 * No shadow for tooltips/menus that are already translucent (and keep track of those made translucent).
 * Added a key for double-click.
 * Blur the regions behind translucent menus/tooltips appropriately if blurring is enabled.
 * Fixed the positioning of bottom tab labels.
 * Check for internalWinId before deleting blur atom.

V0.8.8
---------
 * Changed the layout of the config page of Kvantum Manager.
 * Removed custom icons, except those for MDI titlebars (Kavntum isn't an icon theme after all).
 * Added a key for slim toolbars.
 * Fixed the appearance of Konqueror's security icon on the right of its URL bar.
 * Enable/disable the compositing items of Kvatum Manager's config page correctly.

V0.8.7
---------
 * Added a key and an option for textless progressbars.
 * Added a key and an option for disabling menubar mouse tracking.
 * Font boldness can be set separately for most widget groups now.
 * Fixed LibreOffice's spinboxes.
 * Respect the MenuItem indicator name for right/left arrows and only if the SVG elements aren't found, use the IndicatorArrow name.
 * Added a key for centering toolbar handle instead of scaling it vertically.
 * Don't draw toolbars in KAboutDialog (KAboutPerson).
 * Added the root installation path $PREFIX/share/Kvantum. The user installation has priority.
 * Fixed menubar item states for Qt5 and made them like that of Qt4.
 * Take button icons from icon theme if there is no SVG element for them.
 * Don't force icon sizes.
 * Added a key for toolbutton style.
 * Don't draw scroll area corner panels.
 * Added a toggled state for progressbars (when they are inside selected view items).
 * Got rid of Qt's "standardbutton-no-16.png" as far as possible.

V0.8.6
---------
 * Another method for making Qt5 windows translucent (got rid of private headers).
 * Kvantum Manager: Allow spaces in the theme path (but not in the theme name) when installing.
 * Prevent a crash on quitting in apps using QtWebKit when translucency is enabled.
 * Fixed a rare KMix crash on log-out when blurring was enabled and the style was changed from and to Kvantum.

V0.8.5
---------
 * Ignore Plasma text margins only for push and tool buttons and menubars.
 * Don't go to parent config for pressed text color.
 * Do delayed update only for top-level windows when blurring.

V0.8.4
---------
 * Blur the screen area behind translucent windows under KDE if possible.
 * Added a hacking variable to force blurring for Konsole.
 * Fixed line-edits inside translucent dialogs.
 * Polish palettes inside polish(QApplication*) because that may be needed outside KDE and with Qt4.
 * Process all pending events before setting the style of Kvantum Manager if the config file is created.

V0.8.3
---------
 * Use drawTiledPixmap() and QPixmapCache to render patterns. In this way, windows can have texture too.

V0.8.2
---------
 * Added support for translucent windows and dialogs.
 * Made changes to Kvantum Manager (to cover window translucency).
 * Workaround for a Qt4 positioning bug (taken from QtCurve).

V0.8.1
---------
 * Force Dolphin's view to recognize the base color.
 * Added a hacking variable to force text contrast in apps that don't respect dark themes.
 * Added a configuration page to Kvantum Manager.
 * Added a theme deleting button to Kvantum Manager.

V0.8
---------
 * Added support for right to left layouts as far as needed.
 * Start kvantumpreview from Kvantum Manager.
 * Added Qt5 support.

V0.7.4
---------
 * Don't duplicate the field (line-edit) of a spinbox.
 * When drawing the interior and frame of an editable combobox, don't cover its line-edit area.

V0.7.3
---------
 * Mostly rely on own colors defined under the GeneralColors section.

V0.7.2
---------
 * Added a hacking variable for KTitleWidget.
 * Made toolbox labels respect custom colors.

V0.7.1
---------
 * Added a Hacks section. Currently it has only one hack for Dolphin.
 * Remove flat backgrounds from scroll areas also when they are inside toolboxes.
 * Use update() instead of repaint() to make busy progressbars take less CPU time.

V0.7
---------
 * Added a theme manager for installing and choosing Kvantum themes.
 * Remember the last chosen path in the open dialog of Kvantum Manager.
 * Make use of Kvantum Manager's statusbar.

V0.6.3
---------
 * Use "sudo make install" for installation.
 * Added a new variable for spreading the indicator of a progressbar across its whole groove and not just its interior.
 * Removed ugly (flat) backgrounds from toolboxes.

V0.6.2
---------
 * Don't display a combo toggled when its menu isn't shown.
 * Don't use the focus text color for toggled or pressed widgets.
 * Added a toggle text color (distinct from press text color).
 * Level a popup list with the bottom or top edge of its combobox while not letting the former cover the latter.
 * Don't use toggled and pressed states for the progressbar indicator.

V0.6.1
---------
 * Organized frame and interior rendering (some frame parts were rendered twice).
 * Ignore the pressed state for tabs.
 * Don't use toolbar's frame and interior size specifications for its handle or separator.
 * With styled window backgrounds, remove ugly flat backgrounds from scroll areas even when they have frame.
 * Added a 2px right margin to menu-items when they have arrow or check/radio button.
 * Fixed transparent MDI subwindows.

V0.6
---------
 * Whole windows and dialogs can be styled with an interior element now. The section [Window] is added for that.
 * Removed the redundant section [Widget].
 * Removed ugly flat backgrounds as far as possible when the window backround is styled.

V0.5.3
---------
 * Derive all slider handles from the main one when its length and width are different.
 * Use interiorRect() instead of labelRect() for drawing menuitem indicators.
 * Added a little extra space to menuitems when they have indicators.
 * Don't focus a tool button if only its arrow is focused.
 * When tabs are joined together, don't join the selected tab to its adjacent one(s).
 * Clearing the attribute WA_OpaquePaintEvent from scrollbars is a better solution for their transparency problem than filling their rectangles with the window background.
 * Fixes.

V0.5.2
---------
 * No out-of-grid text, icon, checkbox or tool-button.
 * Give space to slider ticks.
 * Draw slider tickmarks when available.
 * Less concave pressed/toggled buttons look more natural.

V0.5.1
---------
 * Added optional top and bottom (or left and right) glows for scrollbar sliders.
 * Fixed the position of shortcut text for a menu-item that points to a submenu (like in the Extract menu-item of Ark's Action menu).
 * Fixed a condition for rendering (button) texts of Plasma related apps.

V0.5
---------
 * Added optional inactive sub-states. The default theme doesn't use them.
 * Respect the toolbar text color with auto-raised buttons.
 * Read kdeglobals for deciding how to activate view items with single-click as the fallback.
 * Exclude "appmenu" as a Plasma app.
 * Use the old-fashioned method to get the application name because, apparently, applicationName() doesn't work with all Qt4 versions.

V0.4.1
---------
 * Corrected slider position and groove.
 * No redundant arrow on toolbuttons.
 * Force the tooltip (normal) text color.
 * Set the group-box title color.
 * Draw a more elegant rubber band.
 * Added the possibility to set the slider thickness and also the length and thickness of slider handles.
 * Skip ugly frames.
 * No frame for a line-edit inside a view-item whose text is being edited.

V0.4
---------
 * Added the possibility to set the normal, focused and pressed text colors for non-editable widgets. If no (valid) color is set, the color scheme will be used.
 * Added the possibility to set the size of radio buttons and checkboxes without making those on menuitems bigger than usual.
 * Fixed a miscalculation in getting the horizontal scrollbar groove from the vertical one.
 * Set the widths of opposite frames of tool buttons equal to each other when there's only text in them.
 * Fixed instant and delayed popup arrows of tool buttons.
 * Considered the top and bottom frames of line-edits inside editable combos.
 * Corrected the interior of line-edits inside spinboxes.
 * Corrected the width of menu items when they have no icons.
 * Ignore the text margins in getting the rectangle of a (button) label when it's just an icon.
 * Put the contents of tab widgets inside their frames.
 * Fixed labels of vertical progressbars with thick frames.

V0.3.1
---------
 * Adjust the splitter indicator to fit in the handle when the latter is too thin.
 * Get the text shadow color as a string.
 * Minor fixes.

V0.3
---------
 * Added the possibility to raise and group neighbor toolbar (tool) buttons.
 * Translucent tooltips with shadow and rounded corners when compositing is available and enabled.

V0.2.2
---------
 * Don't enable compositing for torn-off menus.
 * Excluded "Qt-subapplication" from compositing. So far, only VirtualBox has introduced itself in that way.
 * If a key is not found in a group from the user config file, first search the "inherits" group(s) of the same file and only then go to the default config.
 * Fixed tiny QStackedWidget arrows (in Qt4 Designer).

V0.2.1
---------
 * Added the possibility to have translucent menus or tooltips with compositing. Now they can also have rounded corners.
 * Added optional menu shadows without inheritance from the default theme (the general plan is to not inherit anything related to compositing from the default theme).
 * A mild shadow and a little translucency for menus of the default theme.
 * Don't use PE_FrameMenu because it would result in frameless menus sometimes.
 * Corrected the position of the menu tear-off indicator.
 * Fixes for preventing any crash.

V0.2
---------
 * Added an alternative glassy theme as a demo.
 * Added documentation for the first release.

V0.1.4
---------
 * Added the capability to drag windows from everywhere by consulting the sources of Oxygen, QtCurve and Bespin.
 * Added workarounds for LibreOffice.
 * Vertical dock titles are taken into account.
 * Text eliding for titles of docks and QMdiSubWindows.
 * Fixed falling back to the default configuration.
 * Removed extra objects from the SVG image.
 * Miscellaneous fixes. Now Kvantum is robust and almost ready to be publicly available :)

V0.1.3
---------
 * Took care of orientation for all widgets by using appropriate transformations.
 * To know the orientation of splitters, check their height and width instead of State_Horizontal.
 * Added the possibility to attach the active tab to the tab widget.
 * Added decorative indicators to splitters.
 * Added grip indicators to scrollbar sliders.
 * Removed animation as it wasn't practical.
 * Removed the config interface since it didn't make configuration easier.

V0.1.2
---------
 * sizeCalculated() can give wrong results in many cases, so use it only when needed.
 * To force frames on view-items, adjust PM_FocusFrameHMargin and PM_FocusFrameVMargin (-> Qt4 -> qcommonstyle.cpp).
 * Set SH_Menu_SloppySubMenus to true for being able to reach submenus by moving the cursor diagonally (bug #315346 at KDE Bugtracking System).
 * Don't remove tab bottom frames; users could remove them if they want to.
 * Fixed the transparency problem of scrollbars.
 * Fixed tabbar scroll buttons by adjusting PM_TabBar_ScrollButtonOverlap and PM_TabBarScrollButtonWidth.
 * Don't press a tool buttton if only its arrow is pressed.
 * A separate pressed or focused (hover) state for each spin button.
 * Treat arrows as icons for tool buttons.
 * Don't draw the interior of a Plasma spinbox.
 * Workaround for some Plasma tool buttons that pretend to have only icons. (why does Plasma sometimes take its style from the window style in the first place?)
 * Workaround for some apps (like Kdenlive with its TimecodeDisplay) that presuppose all spinboxes should have vertical buttons.
 * Fixed (Krita's) progress-spin boxes by checking the orientation of QProgressBars instead of checking State_Horizontal.
 * Fixed some hidden bugs by consulting Qt's qcommonstyle.cpp.

V0.1.1
---------
 * Added shortcut handler (mnemonics with Alt pressed) by consulting QtCurve's source.
 * Fixed the problem of long texts with combo boxes.
 * Took into account the height of checkbox/radio-button indicators for having a reasonable vertical distance between them.
 * Fixed Akregator's tabs.
 * Handled view-item texts inside buttons, like in Kate's font preferences.
 * Took care of vertical buttons in some apps (like digiKam) by not using sizeCalculated().
 * Other fixes.

V0.1
---------
 * Kvantum is born as a fork of QuantumStyle. Many bugs are fixed and some missing widgets are added so that it is fairly usable now but there is still a lot of work to do.
